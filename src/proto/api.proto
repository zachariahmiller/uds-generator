syntax = "proto3";
package api;

import "google/api/annotations.proto";

message Package {
  string name = 1;
  repeated string versions = 2;
  string repositoryUrl = 3;
  string lastUpdatedDate = 4;
}

message PackageDetail {
  string name = 1;
  repeated string versions = 2;
  string repositoryUrl = 3;
  optional string description = 4;
  optional string status = 5;
  optional int32 downloads = 6;
  string dateModified = 7;
  string dateCreated = 8;
}

message Dependency {
  string name = 1;
  string description = 2;
  optional string version = 3;
  optional string repository = 4;
  optional string alias = 5;
}

message GenerateRequest {
  string name = 1;
  string description = 2;
  optional string chartPath = 3;
  optional string chartName = 4;
  optional string chartUrl = 5;
  optional string namespace = 6;
  repeated Dependency dependencies = 7;
}

message GenerateResponse {
  bool success = 1;
  string message = 2;
}

message FindImagesRequest {
  string chartPath = 1;
  string chartName = 2;
  string chartUrl = 3;
}

message FindImagesResponse {
  repeated string images = 1;
}

message ListPackagesRequest {
  optional string filter = 1;
}

message ListPackagesResponse {
  repeated Package packages = 1;
}

message GetPackageRequest {
  optional string name = 1;
  optional string repositoryUrl = 2;
}

message ListDependenciesResponse {
  repeated Dependency dependencies = 1;
}

service PackageService {
  rpc ListPackages(ListPackagesRequest) returns (ListPackagesResponse) {
    option (google.api.http) = {
      get: "/packages"
    };
  }

  rpc GetPackage(GetPackageRequest) returns (PackageDetail) {
    option (google.api.http) = {
      get: "/packages/details"
    };
  }

  rpc Generate(GenerateRequest) returns (GenerateResponse) {
    option (google.api.http) = {
      post: "/packages/generate"
    };
  }

  rpc ListDependencies(google.protobuf.Empty) returns (ListDependenciesResponse) {
    option (google.api.http) = {
      get: "/packages/dependencies"
    };
  }

  rpc FindImages(FindImagesRequest) returns (FindImagesResponse) {
    option (google.api.http) = {
      post: "/packages/findimages"
    };
  }
}
